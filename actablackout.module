<?php

/**
 * ACTA Blackout module
 * Based on https://github.com/mcantelon/drupal-sopa-blackout
 *
 * @author fajka <fajka@hyperreal.info>
 */

/**
 * Implements hook_menu().
 */
function actablackout_menu() {
  $items = array();
  $items['admin/settings/actablackout'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('actablackout_admin'),
    'title' => 'ACTA Blackout',
    'description' => t('ACTA Blackout settings'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['actatest'] = array(
    'page callback' => 'actablackout_testpage',
    'title' => 'ACTA Blackout TEST',
    'type' => MENU_CALLBACK,
    'access callback' => 'actablackout_testpage_access',
  );

  return $items;
}

function actablackout_testpage() {
  return 'ACTA Blackout test';
}

function actablackout_testpage_access() {
  return TRUE;
}

function actablackout_admin() {
  $form = array();


  $ds = date('Y-m-d H:i');
  $de = date('Y-m-d H:i', time() + 86400);

  $form['description'] = array(
    '#value' => t('<p>You can adjust ACTA Blackout settings here.</p>')
  );

  $form['actablackout_date_start'] = array(
    '#type' => 'date_select',
    '#date_format' => 'Y-m-d H:i',
    '#title' => t('Date from'),
    '#default_value' => variable_get('actablackout_date_start', $ds),
    '#description' => t('When blackout starts'),
    '#required' => TRUE,
  );

  $form['actablackout_date_end'] = array(
    '#type' => 'date_select',
    '#date_format' => 'Y-m-d H:i',
    '#title' => t('Date to'),
    '#default_value' => variable_get('actablackout_date_end', $de),
    '#description' => t('When blackout ends'),
    '#required' => TRUE,
  );

  $form['actablackout_link'] = array(
    '#type' => 'textfield',
    '#title' => t('Title link'),
    '#description' => t('Where redirect user that click the title'),
    '#default_value' => variable_get('actablackout_link', 'http://americancensorship.org/'),
    '#required' => TRUE,
  );

  $form['actablackout_title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#description' => t('Title of the blackout'),
    '#default_value' => variable_get('actablackout_title', 'No to ACTA!'),
    '#required' => TRUE,
  );

  $form['actablackout_explain'] = array(
    '#type' => 'textarea',
    '#title' => t('Blackout explanation page code'),
    '#description' => 'HTML code of explanation that you want to display to the user. <strong>Do not include &lt;head&gt; section!</strong>',
    '#default_value' => variable_get('actablackout_explain', ''),
    '#rows' => 30,
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

/**
 * Implements hook_init().
 */
function actablackout_init() {
  global $base_url;

  if ($_GET['q'] != 'actatest') {
    $path = drupal_get_normal_path($_GET['q']);
    $link = variable_get('actablackout_link', array());
    if (substr($path, 0, 5) == 'admin' || substr($path, 0, 4) == 'user' || (!is_array($link) && $base_url.'/'.$_GET['q'] == $link) || $_GET['q'] == 'nie-dla-acta') {
      return;
    }

    if (!actablackout_blackout_active()) {
      return;
    }

  }

  $date_end = variable_get('actablackout_date_end', NULL);

  header('HTTP/1.1 503 Service Temporarily Unavailable');
  if (!is_null($date_end)) {
    header('Retry-after: '.date('r', strtotime($date_end)));
  }

  include_once drupal_get_path('module', 'actablackout') . '/template/template.php';
  exit;

}

/**
 * returns TRUE if blackout is now active and FALSE otherwise.
 */
function actablackout_blackout_active() {
  $date_start = variable_get('actablackout_date_start', NULL);
  $date_end = variable_get('actablackout_date_end', NULL);

  if (is_null($date_start) || is_null($date_end)) {
    return FALSE;
  }

  $ds = strtotime($date_start);
  $de = strtotime($date_end);

  $now = time();

  return $now > $ds && $now < $de;
}